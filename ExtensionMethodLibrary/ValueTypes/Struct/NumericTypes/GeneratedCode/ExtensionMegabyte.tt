<#@ template language="C#" #>
<#@ output extension="cs" #>
<#
var valueTypes = new[]
    {
        typeof (System.Int32),
        typeof (System.Int64),
        typeof (System.UInt32),
        typeof (System.UInt64),
        typeof (System.Single),
        typeof (System.Double)
    };
#>
using System.Diagnostics;

namespace ExtensionMethodLibrary.ValueTypes
{
    public static partial class ExtensionMegabyte
    {
<#
        foreach (var valueType in valueTypes) 
        { 
#>

        [DebuggerStepThroughAttribute]
        public static double Megabyte(this <#= valueType #> value)
        {
            return value / 1048576.0d;
        }
<#
        }
#>
    }
}