<#@ template language="C#" #>
<#@ output extension="cs" #>
<#
var valueTypes = new[]
    {
        typeof (System.Int32),
        typeof (System.Int64),
        typeof (System.UInt32),
        typeof (System.UInt64),
        typeof (System.Single),
        typeof (System.Double),
        typeof (System.Decimal)
    };
#>
using System.Diagnostics;

namespace ExtensionMethodLibrary.ValueTypes
{
    public static partial class ExtensionMillion
    {
<#
        foreach (var valueType in valueTypes) 
        { 
#>

        [DebuggerStepThroughAttribute]
        public static <#= valueType #> Million(this <#= valueType #> value)
        {
            return value * 1000000;
        }
<#
        }
#>
    }
}